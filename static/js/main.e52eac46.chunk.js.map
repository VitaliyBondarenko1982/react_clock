{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["getCurrentDate","Date","toUTCString","slice","Clock","props","clockTimerId","state","currentTime","console","log","this","window","setInterval","setState","info","nextProps","nextState","clockName","prevProps","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","timerId","handleContextMenu","event","preventDefault","handleClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"8MAUA,SAASA,IACP,OAAO,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAGvC,IAAMC,EAAb,kDAQE,WAAYC,GAAiC,IAAD,8BAC1C,cAAMA,IARRC,aAAe,EAO6B,EAL5CC,MAAQ,CACNC,YAAaR,KAQbS,QAAQC,IAAI,eAJ8B,EAR9C,qDAeE,WAAqB,IAAD,OAElBD,QAAQC,IAAI,qBAEZC,KAAKL,aAAeM,OAAOC,aAAY,WACrC,EAAKC,SAAS,CACZN,YAAaR,MAIfS,QAAQM,KAAK,EAAKR,MAAMC,eACvB,OA1BP,mCA8BE,SACEQ,EAA4BC,GAK5B,OAFAR,QAAQC,IAAI,yBAELC,KAAKN,MAAMa,YAAcF,EAAUE,WACrCP,KAAKJ,MAAMC,cAAgBS,EAAUT,cArC9C,gCAwCE,SAAmBW,GAEjBV,QAAQC,IAAI,sBACRS,EAAUD,YAAcP,KAAKN,MAAMa,WAErCT,QAAQW,MAAR,uBAA8BD,EAAUD,UAAxC,eAAwDP,KAAKN,MAAMa,cA7CzE,kCAiDE,WAEET,QAAQC,IAAI,wBACZE,OAAOS,cAAcV,KAAKL,gBApD9B,oBAuDE,WAEEG,QAAQC,IAAI,UACZ,IAAQF,EAAgBG,KAAKJ,MAArBC,YACAU,EAAcP,KAAKN,MAAnBa,UAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAiBD,sBAAMI,UAAU,cAAhB,SACGd,WArFX,GAA2Be,IAAMC,W,MCTjC,SAASC,IACP,IAAMC,EAAQzB,KAAK0B,MAAMC,WAAWzB,OAAO,GAE3C,MAAM,SAAN,OAAgBuB,GAQX,IAAMG,EAAb,4MACEtB,MAAQ,CACNuB,UAAU,EACVZ,UAAW,WAHf,EAMEa,QAAU,EANZ,EAyBEC,kBAAoB,SAACC,GACnBA,EAAMC,iBAEN,EAAKpB,SAAS,CACZgB,UAAU,KA7BhB,EAiCEK,YAAc,WACZ,EAAKrB,SAAS,CACZgB,UAAU,KAnChB,uDAQE,WAAqB,IAAD,OAClBnB,KAAKoB,QAAUnB,OAAOC,aAAY,WAChC,EAAKC,SAAS,CACZI,UAAWO,QAEZ,MAEHW,SAASC,iBAAiB,cAAe1B,KAAKqB,mBAC9CI,SAASC,iBAAiB,QAAS1B,KAAKwB,eAhB5C,kCAmBE,WACEC,SAASE,oBAAoB,cAAe3B,KAAKqB,mBACjDI,SAASE,oBAAoB,QAAS3B,KAAKwB,aAC3CvB,OAAOS,cAAcV,KAAKoB,WAtB9B,oBAuCE,WACE,MAAgCpB,KAAKJ,MAA7BuB,EAAR,EAAQA,SAAUZ,EAAlB,EAAkBA,UAElB,OACE,sBAAKI,UAAU,MAAf,UACE,6CACCQ,GAAY,cAAC,EAAD,CAAOZ,UAAWA,WA7CvC,GAAyBK,IAAMC,WCb/Be,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.e52eac46.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  currentTime: string,\n}\n\ninterface Props {\n  clockName: string,\n}\n\nfunction getCurrentDate() {\n  return new Date().toUTCString().slice(-12, -4);\n}\n\nexport class Clock extends React.Component<Props, State> {\n  clockTimerId = 0;\n\n  state = {\n    currentTime: getCurrentDate(),\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(props: Props | Readonly<Props>) {\n    super(props);\n\n    // eslint-disable-next-line no-console\n    console.log('constructor');\n  }\n\n  componentDidMount() {\n    // eslint-disable-next-line no-console\n    console.log('componentDidMount');\n\n    this.clockTimerId = window.setInterval(() => {\n      this.setState({\n        currentTime: getCurrentDate(),\n      });\n\n      // eslint-disable-next-line no-console\n      console.info(this.state.currentTime);\n    }, 1000);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  shouldComponentUpdate(\n    nextProps: Readonly<Props>, nextState: Readonly<State>,\n  ): boolean {\n    // eslint-disable-next-line no-console\n    console.log('shouldComponentUpdate');\n\n    return this.props.clockName !== nextProps.clockName\n      || this.state.currentTime !== nextState.currentTime;\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    // eslint-disable-next-line no-console\n    console.log('componentDidUpdate');\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    // eslint-disable-next-line no-console\n    console.log('componentWillUnmount');\n    window.clearInterval(this.clockTimerId);\n  }\n\n  render() {\n    // eslint-disable-next-line no-console\n    console.log('render');\n    const { currentTime } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        {/* eslint-disable-next-line no-console */}\n        {/* {console.log(<div className=\"test\">Some block</div>)} */}\n        {/* <div className=\"test\"> */}\n        {/*  Some Block */}\n        {/*  <span>span element</span> */}\n        {/* </div> */}\n        {/* { */}\n        {/*  React.createElement( */}\n        {/*    'div', */}\n        {/*    { className: 'test' }, */}\n        {/*    'Some Block', */}\n        {/*    React.createElement('span', {}, 'span element'), */}\n        {/*  ) */}\n        {/* } */}\n\n        <span className=\"Clock__time\">\n          {currentTime}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  hasClock: boolean,\n  clockName: string,\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleContextMenu);\n    document.addEventListener('click', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n    document.removeEventListener('click', this.handleClick);\n    window.clearInterval(this.timerId);\n  }\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({\n      hasClock: false,\n    });\n  };\n\n  handleClick = () => {\n    this.setState({\n      hasClock: true,\n    });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}